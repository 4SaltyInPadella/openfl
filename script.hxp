package;


import hxp.*;


class Script extends hxp.Script {
	
	
	public function new () {
		
		super ();
		
		if (command == "default") command = "test";
		
		switch (command) {
			case "test": test ();
			default: Log.error ("Unknown command: \"" + command + "\"");
		}
		
	}
	
	
	private function test ():Void {
		
		var targets = [
			"npm",
			"npm-es5",
			"npm-es6",
			"npm-haxe",
			"npm-typescript",
			"haxelib",
			"flash",
			"html5",
			"neko",
			"cpp",
			"windows",
			"mac",
			"linux",
			"web"
		];
		
		if (commandArgs.length > 0) {
			
			var target = commandArgs[0];
			
			if (targets.indexOf (target) == -1) {
				Log.error ("Unknown target type \"" + target + "\"");
			}
			
			if (target == "npm") {
				
				testNPM ();
				
			} else if (StringTools.startsWith (target, "npm-")) {
				
				testNPM (target.substr (4));
				
			} else if (target == "haxelib") {
				
				testHaxelib ();
				
			} else {
				
				testHaxelib (target);
				
			}
			
		} else {
			
			testHaxelib ();
			testNPM ();
			
		}
		
	}
	
	
	private function testHaxelib (target:String = null):Void {
		
		var dir = Path.combine (Sys.getCwd (), "test/haxelib");
		
		System.runCommand (dir, "haxelib", [ "run", "munit", "gen" ]);
		
		if (target == "neko" || target == null) System.runCommand (dir, "openfl", [ "test", "neko" ]);
		if (target == "cpp" || target == null || target == System.hostPlatform) System.runCommand (dir, "openfl", [ "test", "cpp" ]);
		
		if (target == "web" || target == "flash" || target == null) System.runCommand (dir, "openfl", [ "build", "flash" ]);
		if (target == "web" || target == "html5" || target == null) System.runCommand (dir, "openfl", [ "build", "html5" ]);
		
		if (target == "web" || target == "html5" || target == "flash" || target == null) System.runCommand (dir, "haxelib", [ "run", "munit", "test" ]);
		
	}
	
	
	private function testNPM (target:String = null):Void {
		
		switch (target) {
			
			case "es5": System.runCommand ("", "npm", [ "run", "test-es5", "-s" ]);
			case "es6": System.runCommand ("", "npm", [ "run", "test-es6", "-s" ]);
			case "haxe": System.runCommand ("", "npm", [ "run", "test-haxe", "-s" ]);
			case "typescript": System.runCommand ("", "npm", [ "run", "test-typescript" ]);
			default: System.runCommand ("", "npm", [ "run", "test", "-s" ]);
			
		}
		
	}
	
	
}